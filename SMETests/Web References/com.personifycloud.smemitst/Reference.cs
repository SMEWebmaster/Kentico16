//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SMETests.com.personifycloud.smemitst {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="serviceSoap", Namespace="http://TIMSSSSO/webservice")]
    public partial class service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SSOCustomerTokenIsValidOperationCompleted;
        
        private System.Threading.SendOrPostCallback TIMSSCustomerIdentifierGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback TIMSSCustomerIdentifierSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback VendorSSOCustomerIdentifierGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback VendorSSOCustomerIdentifierSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback SSOCustomerLogoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback VendorTokenEncryptOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerTokenDecryptOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthorizeAccessOperationCompleted;
        
        private System.Threading.SendOrPostCallback SSOCustomerGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback SSOCustomerGetByEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SSOCustomerGetByUsernameOperationCompleted;
        
        private System.Threading.SendOrPostCallback SSOCustomerGetByCustomerTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback SSOCustomerRegisterWithRandomPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback SSOCustomerRegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback SSOCustomerRegister1OperationCompleted;
        
        private System.Threading.SendOrPostCallback SSOCustomerUpdateUserNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback SSOCustomerUpdateEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SSOCustomerUpdatePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback SSOCustomerAuthenticateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SSODeleteDuplicateCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback SSOCustomerDoesVendorCustomerExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerAuthenticateAndGetIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerAuthenticateAndGetVendorCustomerIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SSOCustomerUpdateEmailByTimssIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SSOCustomerUpdateEmailByUserNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback SSOCustomerUpdateUserNameByTimssIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SSOCustomerUpdatePasswordByTimssIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SSOCustomerUpdatePasswordByUserNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback SSOSendPasswordResetOperationCompleted;
        
        private System.Threading.SendOrPostCallback SSOSendPasswordResetByUserNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback SSOEnableDisableCustomerAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback SSOCustomerPasswordIsStrongOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public service() {
            this.Url = global::SMETests.Properties.Settings.Default.SMETests_com_personifycloud_smemitst_service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SSOCustomerTokenIsValidCompletedEventHandler SSOCustomerTokenIsValidCompleted;
        
        /// <remarks/>
        public event TIMSSCustomerIdentifierGetCompletedEventHandler TIMSSCustomerIdentifierGetCompleted;
        
        /// <remarks/>
        public event TIMSSCustomerIdentifierSetCompletedEventHandler TIMSSCustomerIdentifierSetCompleted;
        
        /// <remarks/>
        public event VendorSSOCustomerIdentifierGetCompletedEventHandler VendorSSOCustomerIdentifierGetCompleted;
        
        /// <remarks/>
        public event VendorSSOCustomerIdentifierSetCompletedEventHandler VendorSSOCustomerIdentifierSetCompleted;
        
        /// <remarks/>
        public event SSOCustomerLogoutCompletedEventHandler SSOCustomerLogoutCompleted;
        
        /// <remarks/>
        public event VendorTokenEncryptCompletedEventHandler VendorTokenEncryptCompleted;
        
        /// <remarks/>
        public event CustomerTokenDecryptCompletedEventHandler CustomerTokenDecryptCompleted;
        
        /// <remarks/>
        public event AuthorizeAccessCompletedEventHandler AuthorizeAccessCompleted;
        
        /// <remarks/>
        public event SSOCustomerGetCompletedEventHandler SSOCustomerGetCompleted;
        
        /// <remarks/>
        public event SSOCustomerGetByEmailCompletedEventHandler SSOCustomerGetByEmailCompleted;
        
        /// <remarks/>
        public event SSOCustomerGetByUsernameCompletedEventHandler SSOCustomerGetByUsernameCompleted;
        
        /// <remarks/>
        public event SSOCustomerGetByCustomerTokenCompletedEventHandler SSOCustomerGetByCustomerTokenCompleted;
        
        /// <remarks/>
        public event SSOCustomerRegisterWithRandomPasswordCompletedEventHandler SSOCustomerRegisterWithRandomPasswordCompleted;
        
        /// <remarks/>
        public event SSOCustomerRegisterCompletedEventHandler SSOCustomerRegisterCompleted;
        
        /// <remarks/>
        public event SSOCustomerRegister1CompletedEventHandler SSOCustomerRegister1Completed;
        
        /// <remarks/>
        public event SSOCustomerUpdateUserNameCompletedEventHandler SSOCustomerUpdateUserNameCompleted;
        
        /// <remarks/>
        public event SSOCustomerUpdateEmailCompletedEventHandler SSOCustomerUpdateEmailCompleted;
        
        /// <remarks/>
        public event SSOCustomerUpdatePasswordCompletedEventHandler SSOCustomerUpdatePasswordCompleted;
        
        /// <remarks/>
        public event SSOCustomerAuthenticateCompletedEventHandler SSOCustomerAuthenticateCompleted;
        
        /// <remarks/>
        public event SSODeleteDuplicateCustomerCompletedEventHandler SSODeleteDuplicateCustomerCompleted;
        
        /// <remarks/>
        public event SSOCustomerDoesVendorCustomerExistCompletedEventHandler SSOCustomerDoesVendorCustomerExistCompleted;
        
        /// <remarks/>
        public event CustomerAuthenticateAndGetIdCompletedEventHandler CustomerAuthenticateAndGetIdCompleted;
        
        /// <remarks/>
        public event CustomerAuthenticateAndGetVendorCustomerIdCompletedEventHandler CustomerAuthenticateAndGetVendorCustomerIdCompleted;
        
        /// <remarks/>
        public event SSOCustomerUpdateEmailByTimssIDCompletedEventHandler SSOCustomerUpdateEmailByTimssIDCompleted;
        
        /// <remarks/>
        public event SSOCustomerUpdateEmailByUserNameCompletedEventHandler SSOCustomerUpdateEmailByUserNameCompleted;
        
        /// <remarks/>
        public event SSOCustomerUpdateUserNameByTimssIDCompletedEventHandler SSOCustomerUpdateUserNameByTimssIDCompleted;
        
        /// <remarks/>
        public event SSOCustomerUpdatePasswordByTimssIDCompletedEventHandler SSOCustomerUpdatePasswordByTimssIDCompleted;
        
        /// <remarks/>
        public event SSOCustomerUpdatePasswordByUserNameCompletedEventHandler SSOCustomerUpdatePasswordByUserNameCompleted;
        
        /// <remarks/>
        public event SSOSendPasswordResetCompletedEventHandler SSOSendPasswordResetCompleted;
        
        /// <remarks/>
        public event SSOSendPasswordResetByUserNameCompletedEventHandler SSOSendPasswordResetByUserNameCompleted;
        
        /// <remarks/>
        public event SSOEnableDisableCustomerAccountCompletedEventHandler SSOEnableDisableCustomerAccountCompleted;
        
        /// <remarks/>
        public event SSOCustomerPasswordIsStrongCompletedEventHandler SSOCustomerPasswordIsStrongCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://TIMSSSSO/webservice/SSOCustomerTokenIsValid", RequestNamespace="http://TIMSSSSO/webservice", ResponseNamespace="http://TIMSSSSO/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SSOCustomerTokenIsValidResult SSOCustomerTokenIsValid(string vendorUsername, string vendorPassword, string customerToken) {
            object[] results = this.Invoke("SSOCustomerTokenIsValid", new object[] {
                        vendorUsername,
                        vendorPassword,
                        customerToken});
            return ((SSOCustomerTokenIsValidResult)(results[0]));
        }
        
        /// <remarks/>
        public void SSOCustomerTokenIsValidAsync(string vendorUsername, string vendorPassword, string customerToken) {
            this.SSOCustomerTokenIsValidAsync(vendorUsername, vendorPassword, customerToken, null);
        }
        
        /// <remarks/>
        public void SSOCustomerTokenIsValidAsync(string vendorUsername, string vendorPassword, string customerToken, object userState) {
            if ((this.SSOCustomerTokenIsValidOperationCompleted == null)) {
                this.SSOCustomerTokenIsValidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSOCustomerTokenIsValidOperationCompleted);
            }
            this.InvokeAsync("SSOCustomerTokenIsValid", new object[] {
                        vendorUsername,
                        vendorPassword,
                        customerToken}, this.SSOCustomerTokenIsValidOperationCompleted, userState);
        }
        
        private void OnSSOCustomerTokenIsValidOperationCompleted(object arg) {
            if ((this.SSOCustomerTokenIsValidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSOCustomerTokenIsValidCompleted(this, new SSOCustomerTokenIsValidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://TIMSSSSO/webservice/TIMSSCustomerIdentifierGet", RequestNamespace="http://TIMSSSSO/webservice", ResponseNamespace="http://TIMSSSSO/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TIMSSCustomerIdentifierGetResult TIMSSCustomerIdentifierGet(string vendorUsername, string vendorPassword, string customerToken) {
            object[] results = this.Invoke("TIMSSCustomerIdentifierGet", new object[] {
                        vendorUsername,
                        vendorPassword,
                        customerToken});
            return ((TIMSSCustomerIdentifierGetResult)(results[0]));
        }
        
        /// <remarks/>
        public void TIMSSCustomerIdentifierGetAsync(string vendorUsername, string vendorPassword, string customerToken) {
            this.TIMSSCustomerIdentifierGetAsync(vendorUsername, vendorPassword, customerToken, null);
        }
        
        /// <remarks/>
        public void TIMSSCustomerIdentifierGetAsync(string vendorUsername, string vendorPassword, string customerToken, object userState) {
            if ((this.TIMSSCustomerIdentifierGetOperationCompleted == null)) {
                this.TIMSSCustomerIdentifierGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTIMSSCustomerIdentifierGetOperationCompleted);
            }
            this.InvokeAsync("TIMSSCustomerIdentifierGet", new object[] {
                        vendorUsername,
                        vendorPassword,
                        customerToken}, this.TIMSSCustomerIdentifierGetOperationCompleted, userState);
        }
        
        private void OnTIMSSCustomerIdentifierGetOperationCompleted(object arg) {
            if ((this.TIMSSCustomerIdentifierGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TIMSSCustomerIdentifierGetCompleted(this, new TIMSSCustomerIdentifierGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://TIMSSSSO/webservice/TIMSSCustomerIdentifierSet", RequestNamespace="http://TIMSSSSO/webservice", ResponseNamespace="http://TIMSSSSO/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VendorSSOCustomerIdentifierSetResult TIMSSCustomerIdentifierSet(string vendorUsername, string vendorPassword, string userName, string TIMSSCustomerIdentifier) {
            object[] results = this.Invoke("TIMSSCustomerIdentifierSet", new object[] {
                        vendorUsername,
                        vendorPassword,
                        userName,
                        TIMSSCustomerIdentifier});
            return ((VendorSSOCustomerIdentifierSetResult)(results[0]));
        }
        
        /// <remarks/>
        public void TIMSSCustomerIdentifierSetAsync(string vendorUsername, string vendorPassword, string userName, string TIMSSCustomerIdentifier) {
            this.TIMSSCustomerIdentifierSetAsync(vendorUsername, vendorPassword, userName, TIMSSCustomerIdentifier, null);
        }
        
        /// <remarks/>
        public void TIMSSCustomerIdentifierSetAsync(string vendorUsername, string vendorPassword, string userName, string TIMSSCustomerIdentifier, object userState) {
            if ((this.TIMSSCustomerIdentifierSetOperationCompleted == null)) {
                this.TIMSSCustomerIdentifierSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTIMSSCustomerIdentifierSetOperationCompleted);
            }
            this.InvokeAsync("TIMSSCustomerIdentifierSet", new object[] {
                        vendorUsername,
                        vendorPassword,
                        userName,
                        TIMSSCustomerIdentifier}, this.TIMSSCustomerIdentifierSetOperationCompleted, userState);
        }
        
        private void OnTIMSSCustomerIdentifierSetOperationCompleted(object arg) {
            if ((this.TIMSSCustomerIdentifierSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TIMSSCustomerIdentifierSetCompleted(this, new TIMSSCustomerIdentifierSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://TIMSSSSO/webservice/VendorSSOCustomerIdentifierGet", RequestNamespace="http://TIMSSSSO/webservice", ResponseNamespace="http://TIMSSSSO/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VendorSSOCustomerIdentifierGetResult VendorSSOCustomerIdentifierGet(string vendorUsername, string vendorPassword, string customerToken) {
            object[] results = this.Invoke("VendorSSOCustomerIdentifierGet", new object[] {
                        vendorUsername,
                        vendorPassword,
                        customerToken});
            return ((VendorSSOCustomerIdentifierGetResult)(results[0]));
        }
        
        /// <remarks/>
        public void VendorSSOCustomerIdentifierGetAsync(string vendorUsername, string vendorPassword, string customerToken) {
            this.VendorSSOCustomerIdentifierGetAsync(vendorUsername, vendorPassword, customerToken, null);
        }
        
        /// <remarks/>
        public void VendorSSOCustomerIdentifierGetAsync(string vendorUsername, string vendorPassword, string customerToken, object userState) {
            if ((this.VendorSSOCustomerIdentifierGetOperationCompleted == null)) {
                this.VendorSSOCustomerIdentifierGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVendorSSOCustomerIdentifierGetOperationCompleted);
            }
            this.InvokeAsync("VendorSSOCustomerIdentifierGet", new object[] {
                        vendorUsername,
                        vendorPassword,
                        customerToken}, this.VendorSSOCustomerIdentifierGetOperationCompleted, userState);
        }
        
        private void OnVendorSSOCustomerIdentifierGetOperationCompleted(object arg) {
            if ((this.VendorSSOCustomerIdentifierGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VendorSSOCustomerIdentifierGetCompleted(this, new VendorSSOCustomerIdentifierGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://TIMSSSSO/webservice/VendorSSOCustomerIdentifierSet", RequestNamespace="http://TIMSSSSO/webservice", ResponseNamespace="http://TIMSSSSO/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VendorSSOCustomerIdentifierSetResult VendorSSOCustomerIdentifierSet(string vendorUsername, string vendorPassword, string customerToken, string VendorsSSOCustomerIdentifier) {
            object[] results = this.Invoke("VendorSSOCustomerIdentifierSet", new object[] {
                        vendorUsername,
                        vendorPassword,
                        customerToken,
                        VendorsSSOCustomerIdentifier});
            return ((VendorSSOCustomerIdentifierSetResult)(results[0]));
        }
        
        /// <remarks/>
        public void VendorSSOCustomerIdentifierSetAsync(string vendorUsername, string vendorPassword, string customerToken, string VendorsSSOCustomerIdentifier) {
            this.VendorSSOCustomerIdentifierSetAsync(vendorUsername, vendorPassword, customerToken, VendorsSSOCustomerIdentifier, null);
        }
        
        /// <remarks/>
        public void VendorSSOCustomerIdentifierSetAsync(string vendorUsername, string vendorPassword, string customerToken, string VendorsSSOCustomerIdentifier, object userState) {
            if ((this.VendorSSOCustomerIdentifierSetOperationCompleted == null)) {
                this.VendorSSOCustomerIdentifierSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVendorSSOCustomerIdentifierSetOperationCompleted);
            }
            this.InvokeAsync("VendorSSOCustomerIdentifierSet", new object[] {
                        vendorUsername,
                        vendorPassword,
                        customerToken,
                        VendorsSSOCustomerIdentifier}, this.VendorSSOCustomerIdentifierSetOperationCompleted, userState);
        }
        
        private void OnVendorSSOCustomerIdentifierSetOperationCompleted(object arg) {
            if ((this.VendorSSOCustomerIdentifierSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VendorSSOCustomerIdentifierSetCompleted(this, new VendorSSOCustomerIdentifierSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://TIMSSSSO/webservice/SSOCustomerLogout", RequestNamespace="http://TIMSSSSO/webservice", ResponseNamespace="http://TIMSSSSO/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SSOCustomerLogoutResult SSOCustomerLogout(string vendorUsername, string vendorPassword, string customerToken) {
            object[] results = this.Invoke("SSOCustomerLogout", new object[] {
                        vendorUsername,
                        vendorPassword,
                        customerToken});
            return ((SSOCustomerLogoutResult)(results[0]));
        }
        
        /// <remarks/>
        public void SSOCustomerLogoutAsync(string vendorUsername, string vendorPassword, string customerToken) {
            this.SSOCustomerLogoutAsync(vendorUsername, vendorPassword, customerToken, null);
        }
        
        /// <remarks/>
        public void SSOCustomerLogoutAsync(string vendorUsername, string vendorPassword, string customerToken, object userState) {
            if ((this.SSOCustomerLogoutOperationCompleted == null)) {
                this.SSOCustomerLogoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSOCustomerLogoutOperationCompleted);
            }
            this.InvokeAsync("SSOCustomerLogout", new object[] {
                        vendorUsername,
                        vendorPassword,
                        customerToken}, this.SSOCustomerLogoutOperationCompleted, userState);
        }
        
        private void OnSSOCustomerLogoutOperationCompleted(object arg) {
            if ((this.SSOCustomerLogoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSOCustomerLogoutCompleted(this, new SSOCustomerLogoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://TIMSSSSO/webservice/VendorTokenEncrypt", RequestNamespace="http://TIMSSSSO/webservice", ResponseNamespace="http://TIMSSSSO/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VendorTokenEncryptResult VendorTokenEncrypt(string vendorUsername, string vendorPassword, string vendorBlock, string url) {
            object[] results = this.Invoke("VendorTokenEncrypt", new object[] {
                        vendorUsername,
                        vendorPassword,
                        vendorBlock,
                        url});
            return ((VendorTokenEncryptResult)(results[0]));
        }
        
        /// <remarks/>
        public void VendorTokenEncryptAsync(string vendorUsername, string vendorPassword, string vendorBlock, string url) {
            this.VendorTokenEncryptAsync(vendorUsername, vendorPassword, vendorBlock, url, null);
        }
        
        /// <remarks/>
        public void VendorTokenEncryptAsync(string vendorUsername, string vendorPassword, string vendorBlock, string url, object userState) {
            if ((this.VendorTokenEncryptOperationCompleted == null)) {
                this.VendorTokenEncryptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVendorTokenEncryptOperationCompleted);
            }
            this.InvokeAsync("VendorTokenEncrypt", new object[] {
                        vendorUsername,
                        vendorPassword,
                        vendorBlock,
                        url}, this.VendorTokenEncryptOperationCompleted, userState);
        }
        
        private void OnVendorTokenEncryptOperationCompleted(object arg) {
            if ((this.VendorTokenEncryptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VendorTokenEncryptCompleted(this, new VendorTokenEncryptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://TIMSSSSO/webservice/CustomerTokenDecrypt", RequestNamespace="http://TIMSSSSO/webservice", ResponseNamespace="http://TIMSSSSO/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomerTokenDecryptResult CustomerTokenDecrypt(string vendorUsername, string vendorPassword, string vendorBlock, string customerToken) {
            object[] results = this.Invoke("CustomerTokenDecrypt", new object[] {
                        vendorUsername,
                        vendorPassword,
                        vendorBlock,
                        customerToken});
            return ((CustomerTokenDecryptResult)(results[0]));
        }
        
        /// <remarks/>
        public void CustomerTokenDecryptAsync(string vendorUsername, string vendorPassword, string vendorBlock, string customerToken) {
            this.CustomerTokenDecryptAsync(vendorUsername, vendorPassword, vendorBlock, customerToken, null);
        }
        
        /// <remarks/>
        public void CustomerTokenDecryptAsync(string vendorUsername, string vendorPassword, string vendorBlock, string customerToken, object userState) {
            if ((this.CustomerTokenDecryptOperationCompleted == null)) {
                this.CustomerTokenDecryptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerTokenDecryptOperationCompleted);
            }
            this.InvokeAsync("CustomerTokenDecrypt", new object[] {
                        vendorUsername,
                        vendorPassword,
                        vendorBlock,
                        customerToken}, this.CustomerTokenDecryptOperationCompleted, userState);
        }
        
        private void OnCustomerTokenDecryptOperationCompleted(object arg) {
            if ((this.CustomerTokenDecryptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerTokenDecryptCompleted(this, new CustomerTokenDecryptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://TIMSSSSO/webservice/AuthorizeAccess", RequestNamespace="http://TIMSSSSO/webservice", ResponseNamespace="http://TIMSSSSO/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AuthorizeAccessResult AuthorizeAccess(string vendorUsername, string vendorPassword, string theVendorUsername, string theVendorPassword, string webServiceUri) {
            object[] results = this.Invoke("AuthorizeAccess", new object[] {
                        vendorUsername,
                        vendorPassword,
                        theVendorUsername,
                        theVendorPassword,
                        webServiceUri});
            return ((AuthorizeAccessResult)(results[0]));
        }
        
        /// <remarks/>
        public void AuthorizeAccessAsync(string vendorUsername, string vendorPassword, string theVendorUsername, string theVendorPassword, string webServiceUri) {
            this.AuthorizeAccessAsync(vendorUsername, vendorPassword, theVendorUsername, theVendorPassword, webServiceUri, null);
        }
        
        /// <remarks/>
        public void AuthorizeAccessAsync(string vendorUsername, string vendorPassword, string theVendorUsername, string theVendorPassword, string webServiceUri, object userState) {
            if ((this.AuthorizeAccessOperationCompleted == null)) {
                this.AuthorizeAccessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthorizeAccessOperationCompleted);
            }
            this.InvokeAsync("AuthorizeAccess", new object[] {
                        vendorUsername,
                        vendorPassword,
                        theVendorUsername,
                        theVendorPassword,
                        webServiceUri}, this.AuthorizeAccessOperationCompleted, userState);
        }
        
        private void OnAuthorizeAccessOperationCompleted(object arg) {
            if ((this.AuthorizeAccessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthorizeAccessCompleted(this, new AuthorizeAccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://TIMSSSSO/webservice/SSOCustomerGet", RequestNamespace="http://TIMSSSSO/webservice", ResponseNamespace="http://TIMSSSSO/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SSOCustomerGetResult SSOCustomerGet(string vendorUsername, string vendorPassword, string TIMSSCustomerId) {
            object[] results = this.Invoke("SSOCustomerGet", new object[] {
                        vendorUsername,
                        vendorPassword,
                        TIMSSCustomerId});
            return ((SSOCustomerGetResult)(results[0]));
        }
        
        /// <remarks/>
        public void SSOCustomerGetAsync(string vendorUsername, string vendorPassword, string TIMSSCustomerId) {
            this.SSOCustomerGetAsync(vendorUsername, vendorPassword, TIMSSCustomerId, null);
        }
        
        /// <remarks/>
        public void SSOCustomerGetAsync(string vendorUsername, string vendorPassword, string TIMSSCustomerId, object userState) {
            if ((this.SSOCustomerGetOperationCompleted == null)) {
                this.SSOCustomerGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSOCustomerGetOperationCompleted);
            }
            this.InvokeAsync("SSOCustomerGet", new object[] {
                        vendorUsername,
                        vendorPassword,
                        TIMSSCustomerId}, this.SSOCustomerGetOperationCompleted, userState);
        }
        
        private void OnSSOCustomerGetOperationCompleted(object arg) {
            if ((this.SSOCustomerGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSOCustomerGetCompleted(this, new SSOCustomerGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://TIMSSSSO/webservice/SSOCustomerGetByEmail", RequestNamespace="http://TIMSSSSO/webservice", ResponseNamespace="http://TIMSSSSO/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SSOCustomerGetResult SSOCustomerGetByEmail(string vendorUsername, string vendorPassword, string EmailAddress) {
            object[] results = this.Invoke("SSOCustomerGetByEmail", new object[] {
                        vendorUsername,
                        vendorPassword,
                        EmailAddress});
            return ((SSOCustomerGetResult)(results[0]));
        }
        
        /// <remarks/>
        public void SSOCustomerGetByEmailAsync(string vendorUsername, string vendorPassword, string EmailAddress) {
            this.SSOCustomerGetByEmailAsync(vendorUsername, vendorPassword, EmailAddress, null);
        }
        
        /// <remarks/>
        public void SSOCustomerGetByEmailAsync(string vendorUsername, string vendorPassword, string EmailAddress, object userState) {
            if ((this.SSOCustomerGetByEmailOperationCompleted == null)) {
                this.SSOCustomerGetByEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSOCustomerGetByEmailOperationCompleted);
            }
            this.InvokeAsync("SSOCustomerGetByEmail", new object[] {
                        vendorUsername,
                        vendorPassword,
                        EmailAddress}, this.SSOCustomerGetByEmailOperationCompleted, userState);
        }
        
        private void OnSSOCustomerGetByEmailOperationCompleted(object arg) {
            if ((this.SSOCustomerGetByEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSOCustomerGetByEmailCompleted(this, new SSOCustomerGetByEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://TIMSSSSO/webservice/SSOCustomerGetByUsername", RequestNamespace="http://TIMSSSSO/webservice", ResponseNamespace="http://TIMSSSSO/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SSOCustomerGetResult SSOCustomerGetByUsername(string vendorUsername, string vendorPassword, string UserName) {
            object[] results = this.Invoke("SSOCustomerGetByUsername", new object[] {
                        vendorUsername,
                        vendorPassword,
                        UserName});
            return ((SSOCustomerGetResult)(results[0]));
        }
        
        /// <remarks/>
        public void SSOCustomerGetByUsernameAsync(string vendorUsername, string vendorPassword, string UserName) {
            this.SSOCustomerGetByUsernameAsync(vendorUsername, vendorPassword, UserName, null);
        }
        
        /// <remarks/>
        public void SSOCustomerGetByUsernameAsync(string vendorUsername, string vendorPassword, string UserName, object userState) {
            if ((this.SSOCustomerGetByUsernameOperationCompleted == null)) {
                this.SSOCustomerGetByUsernameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSOCustomerGetByUsernameOperationCompleted);
            }
            this.InvokeAsync("SSOCustomerGetByUsername", new object[] {
                        vendorUsername,
                        vendorPassword,
                        UserName}, this.SSOCustomerGetByUsernameOperationCompleted, userState);
        }
        
        private void OnSSOCustomerGetByUsernameOperationCompleted(object arg) {
            if ((this.SSOCustomerGetByUsernameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSOCustomerGetByUsernameCompleted(this, new SSOCustomerGetByUsernameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://TIMSSSSO/webservice/SSOCustomerGetByCustomerToken", RequestNamespace="http://TIMSSSSO/webservice", ResponseNamespace="http://TIMSSSSO/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SSOCustomerGetResult SSOCustomerGetByCustomerToken(string vendorUsername, string vendorPassword, string customerToken) {
            object[] results = this.Invoke("SSOCustomerGetByCustomerToken", new object[] {
                        vendorUsername,
                        vendorPassword,
                        customerToken});
            return ((SSOCustomerGetResult)(results[0]));
        }
        
        /// <remarks/>
        public void SSOCustomerGetByCustomerTokenAsync(string vendorUsername, string vendorPassword, string customerToken) {
            this.SSOCustomerGetByCustomerTokenAsync(vendorUsername, vendorPassword, customerToken, null);
        }
        
        /// <remarks/>
        public void SSOCustomerGetByCustomerTokenAsync(string vendorUsername, string vendorPassword, string customerToken, object userState) {
            if ((this.SSOCustomerGetByCustomerTokenOperationCompleted == null)) {
                this.SSOCustomerGetByCustomerTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSOCustomerGetByCustomerTokenOperationCompleted);
            }
            this.InvokeAsync("SSOCustomerGetByCustomerToken", new object[] {
                        vendorUsername,
                        vendorPassword,
                        customerToken}, this.SSOCustomerGetByCustomerTokenOperationCompleted, userState);
        }
        
        private void OnSSOCustomerGetByCustomerTokenOperationCompleted(object arg) {
            if ((this.SSOCustomerGetByCustomerTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSOCustomerGetByCustomerTokenCompleted(this, new SSOCustomerGetByCustomerTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://TIMSSSSO/webservice/SSOCustomerRegisterWithRandomPassword", RequestNamespace="http://TIMSSSSO/webservice", ResponseNamespace="http://TIMSSSSO/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SSOCustomerRegisterResult SSOCustomerRegisterWithRandomPassword(string vendorUsername, string vendorPassword, string userName, string newPassword, string emailAddress, string firstName, string lastName, bool SSOCustomerTokenNeeded) {
            object[] results = this.Invoke("SSOCustomerRegisterWithRandomPassword", new object[] {
                        vendorUsername,
                        vendorPassword,
                        userName,
                        newPassword,
                        emailAddress,
                        firstName,
                        lastName,
                        SSOCustomerTokenNeeded});
            return ((SSOCustomerRegisterResult)(results[0]));
        }
        
        /// <remarks/>
        public void SSOCustomerRegisterWithRandomPasswordAsync(string vendorUsername, string vendorPassword, string userName, string newPassword, string emailAddress, string firstName, string lastName, bool SSOCustomerTokenNeeded) {
            this.SSOCustomerRegisterWithRandomPasswordAsync(vendorUsername, vendorPassword, userName, newPassword, emailAddress, firstName, lastName, SSOCustomerTokenNeeded, null);
        }
        
        /// <remarks/>
        public void SSOCustomerRegisterWithRandomPasswordAsync(string vendorUsername, string vendorPassword, string userName, string newPassword, string emailAddress, string firstName, string lastName, bool SSOCustomerTokenNeeded, object userState) {
            if ((this.SSOCustomerRegisterWithRandomPasswordOperationCompleted == null)) {
                this.SSOCustomerRegisterWithRandomPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSOCustomerRegisterWithRandomPasswordOperationCompleted);
            }
            this.InvokeAsync("SSOCustomerRegisterWithRandomPassword", new object[] {
                        vendorUsername,
                        vendorPassword,
                        userName,
                        newPassword,
                        emailAddress,
                        firstName,
                        lastName,
                        SSOCustomerTokenNeeded}, this.SSOCustomerRegisterWithRandomPasswordOperationCompleted, userState);
        }
        
        private void OnSSOCustomerRegisterWithRandomPasswordOperationCompleted(object arg) {
            if ((this.SSOCustomerRegisterWithRandomPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSOCustomerRegisterWithRandomPasswordCompleted(this, new SSOCustomerRegisterWithRandomPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://TIMSSSSO/webservice/SSOCustomerRegister", RequestNamespace="http://TIMSSSSO/webservice", ResponseNamespace="http://TIMSSSSO/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SSOCustomerRegisterResult SSOCustomerRegister(string vendorUsername, string vendorPassword, string userName, string newPassword, string emailAddress, string firstName, string lastName) {
            object[] results = this.Invoke("SSOCustomerRegister", new object[] {
                        vendorUsername,
                        vendorPassword,
                        userName,
                        newPassword,
                        emailAddress,
                        firstName,
                        lastName});
            return ((SSOCustomerRegisterResult)(results[0]));
        }
        
        /// <remarks/>
        public void SSOCustomerRegisterAsync(string vendorUsername, string vendorPassword, string userName, string newPassword, string emailAddress, string firstName, string lastName) {
            this.SSOCustomerRegisterAsync(vendorUsername, vendorPassword, userName, newPassword, emailAddress, firstName, lastName, null);
        }
        
        /// <remarks/>
        public void SSOCustomerRegisterAsync(string vendorUsername, string vendorPassword, string userName, string newPassword, string emailAddress, string firstName, string lastName, object userState) {
            if ((this.SSOCustomerRegisterOperationCompleted == null)) {
                this.SSOCustomerRegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSOCustomerRegisterOperationCompleted);
            }
            this.InvokeAsync("SSOCustomerRegister", new object[] {
                        vendorUsername,
                        vendorPassword,
                        userName,
                        newPassword,
                        emailAddress,
                        firstName,
                        lastName}, this.SSOCustomerRegisterOperationCompleted, userState);
        }
        
        private void OnSSOCustomerRegisterOperationCompleted(object arg) {
            if ((this.SSOCustomerRegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSOCustomerRegisterCompleted(this, new SSOCustomerRegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="SSOCustomerRegister1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://TIMSSSSO/webservice/SSOCustomerRegisterLogin", RequestElementName="SSOCustomerRegisterLogin", RequestNamespace="http://TIMSSSSO/webservice", ResponseElementName="SSOCustomerRegisterLoginResponse", ResponseNamespace="http://TIMSSSSO/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("SSOCustomerRegisterLoginResult")]
        public SSOCustomerRegisterResult SSOCustomerRegister(string vendorUsername, string vendorPassword, string userName, string newPassword, string emailAddress, string firstName, string lastName, bool SSOCustomerTokenNeeded) {
            object[] results = this.Invoke("SSOCustomerRegister1", new object[] {
                        vendorUsername,
                        vendorPassword,
                        userName,
                        newPassword,
                        emailAddress,
                        firstName,
                        lastName,
                        SSOCustomerTokenNeeded});
            return ((SSOCustomerRegisterResult)(results[0]));
        }
        
        /// <remarks/>
        public void SSOCustomerRegister1Async(string vendorUsername, string vendorPassword, string userName, string newPassword, string emailAddress, string firstName, string lastName, bool SSOCustomerTokenNeeded) {
            this.SSOCustomerRegister1Async(vendorUsername, vendorPassword, userName, newPassword, emailAddress, firstName, lastName, SSOCustomerTokenNeeded, null);
        }
        
        /// <remarks/>
        public void SSOCustomerRegister1Async(string vendorUsername, string vendorPassword, string userName, string newPassword, string emailAddress, string firstName, string lastName, bool SSOCustomerTokenNeeded, object userState) {
            if ((this.SSOCustomerRegister1OperationCompleted == null)) {
                this.SSOCustomerRegister1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSOCustomerRegister1OperationCompleted);
            }
            this.InvokeAsync("SSOCustomerRegister1", new object[] {
                        vendorUsername,
                        vendorPassword,
                        userName,
                        newPassword,
                        emailAddress,
                        firstName,
                        lastName,
                        SSOCustomerTokenNeeded}, this.SSOCustomerRegister1OperationCompleted, userState);
        }
        
        private void OnSSOCustomerRegister1OperationCompleted(object arg) {
            if ((this.SSOCustomerRegister1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSOCustomerRegister1Completed(this, new SSOCustomerRegister1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://TIMSSSSO/webservice/SSOCustomerUpdateUserName", RequestNamespace="http://TIMSSSSO/webservice", ResponseNamespace="http://TIMSSSSO/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SSOCustomerUpdateResult SSOCustomerUpdateUserName(string vendorUsername, string vendorPassword, string CustomerEmailAddress, string newUserName) {
            object[] results = this.Invoke("SSOCustomerUpdateUserName", new object[] {
                        vendorUsername,
                        vendorPassword,
                        CustomerEmailAddress,
                        newUserName});
            return ((SSOCustomerUpdateResult)(results[0]));
        }
        
        /// <remarks/>
        public void SSOCustomerUpdateUserNameAsync(string vendorUsername, string vendorPassword, string CustomerEmailAddress, string newUserName) {
            this.SSOCustomerUpdateUserNameAsync(vendorUsername, vendorPassword, CustomerEmailAddress, newUserName, null);
        }
        
        /// <remarks/>
        public void SSOCustomerUpdateUserNameAsync(string vendorUsername, string vendorPassword, string CustomerEmailAddress, string newUserName, object userState) {
            if ((this.SSOCustomerUpdateUserNameOperationCompleted == null)) {
                this.SSOCustomerUpdateUserNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSOCustomerUpdateUserNameOperationCompleted);
            }
            this.InvokeAsync("SSOCustomerUpdateUserName", new object[] {
                        vendorUsername,
                        vendorPassword,
                        CustomerEmailAddress,
                        newUserName}, this.SSOCustomerUpdateUserNameOperationCompleted, userState);
        }
        
        private void OnSSOCustomerUpdateUserNameOperationCompleted(object arg) {
            if ((this.SSOCustomerUpdateUserNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSOCustomerUpdateUserNameCompleted(this, new SSOCustomerUpdateUserNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://TIMSSSSO/webservice/SSOCustomerUpdateEmail", RequestNamespace="http://TIMSSSSO/webservice", ResponseNamespace="http://TIMSSSSO/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SSOCustomerUpdateResult SSOCustomerUpdateEmail(string vendorUsername, string vendorPassword, string oldEmailAddress, string newEmailAddress) {
            object[] results = this.Invoke("SSOCustomerUpdateEmail", new object[] {
                        vendorUsername,
                        vendorPassword,
                        oldEmailAddress,
                        newEmailAddress});
            return ((SSOCustomerUpdateResult)(results[0]));
        }
        
        /// <remarks/>
        public void SSOCustomerUpdateEmailAsync(string vendorUsername, string vendorPassword, string oldEmailAddress, string newEmailAddress) {
            this.SSOCustomerUpdateEmailAsync(vendorUsername, vendorPassword, oldEmailAddress, newEmailAddress, null);
        }
        
        /// <remarks/>
        public void SSOCustomerUpdateEmailAsync(string vendorUsername, string vendorPassword, string oldEmailAddress, string newEmailAddress, object userState) {
            if ((this.SSOCustomerUpdateEmailOperationCompleted == null)) {
                this.SSOCustomerUpdateEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSOCustomerUpdateEmailOperationCompleted);
            }
            this.InvokeAsync("SSOCustomerUpdateEmail", new object[] {
                        vendorUsername,
                        vendorPassword,
                        oldEmailAddress,
                        newEmailAddress}, this.SSOCustomerUpdateEmailOperationCompleted, userState);
        }
        
        private void OnSSOCustomerUpdateEmailOperationCompleted(object arg) {
            if ((this.SSOCustomerUpdateEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSOCustomerUpdateEmailCompleted(this, new SSOCustomerUpdateEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://TIMSSSSO/webservice/SSOCustomerUpdatePassword", RequestNamespace="http://TIMSSSSO/webservice", ResponseNamespace="http://TIMSSSSO/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SSOCustomerUpdateResult SSOCustomerUpdatePassword(string vendorUsername, string vendorPassword, string CustomerEmailAddress, string newPassword) {
            object[] results = this.Invoke("SSOCustomerUpdatePassword", new object[] {
                        vendorUsername,
                        vendorPassword,
                        CustomerEmailAddress,
                        newPassword});
            return ((SSOCustomerUpdateResult)(results[0]));
        }
        
        /// <remarks/>
        public void SSOCustomerUpdatePasswordAsync(string vendorUsername, string vendorPassword, string CustomerEmailAddress, string newPassword) {
            this.SSOCustomerUpdatePasswordAsync(vendorUsername, vendorPassword, CustomerEmailAddress, newPassword, null);
        }
        
        /// <remarks/>
        public void SSOCustomerUpdatePasswordAsync(string vendorUsername, string vendorPassword, string CustomerEmailAddress, string newPassword, object userState) {
            if ((this.SSOCustomerUpdatePasswordOperationCompleted == null)) {
                this.SSOCustomerUpdatePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSOCustomerUpdatePasswordOperationCompleted);
            }
            this.InvokeAsync("SSOCustomerUpdatePassword", new object[] {
                        vendorUsername,
                        vendorPassword,
                        CustomerEmailAddress,
                        newPassword}, this.SSOCustomerUpdatePasswordOperationCompleted, userState);
        }
        
        private void OnSSOCustomerUpdatePasswordOperationCompleted(object arg) {
            if ((this.SSOCustomerUpdatePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSOCustomerUpdatePasswordCompleted(this, new SSOCustomerUpdatePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://TIMSSSSO/webservice/SSOCustomerAuthenticate", RequestNamespace="http://TIMSSSSO/webservice", ResponseNamespace="http://TIMSSSSO/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SSOCustomerAuthenticateResult SSOCustomerAuthenticate(string vendorUsername, string vendorPassword, string userName, string password) {
            object[] results = this.Invoke("SSOCustomerAuthenticate", new object[] {
                        vendorUsername,
                        vendorPassword,
                        userName,
                        password});
            return ((SSOCustomerAuthenticateResult)(results[0]));
        }
        
        /// <remarks/>
        public void SSOCustomerAuthenticateAsync(string vendorUsername, string vendorPassword, string userName, string password) {
            this.SSOCustomerAuthenticateAsync(vendorUsername, vendorPassword, userName, password, null);
        }
        
        /// <remarks/>
        public void SSOCustomerAuthenticateAsync(string vendorUsername, string vendorPassword, string userName, string password, object userState) {
            if ((this.SSOCustomerAuthenticateOperationCompleted == null)) {
                this.SSOCustomerAuthenticateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSOCustomerAuthenticateOperationCompleted);
            }
            this.InvokeAsync("SSOCustomerAuthenticate", new object[] {
                        vendorUsername,
                        vendorPassword,
                        userName,
                        password}, this.SSOCustomerAuthenticateOperationCompleted, userState);
        }
        
        private void OnSSOCustomerAuthenticateOperationCompleted(object arg) {
            if ((this.SSOCustomerAuthenticateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSOCustomerAuthenticateCompleted(this, new SSOCustomerAuthenticateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://TIMSSSSO/webservice/SSODeleteDuplicateCustomer", RequestNamespace="http://TIMSSSSO/webservice", ResponseNamespace="http://TIMSSSSO/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SSODeleteDuplicateCustomerResult SSODeleteDuplicateCustomer(string vendorUsername, string vendorPassword, string DuplicateCustomerXML) {
            object[] results = this.Invoke("SSODeleteDuplicateCustomer", new object[] {
                        vendorUsername,
                        vendorPassword,
                        DuplicateCustomerXML});
            return ((SSODeleteDuplicateCustomerResult)(results[0]));
        }
        
        /// <remarks/>
        public void SSODeleteDuplicateCustomerAsync(string vendorUsername, string vendorPassword, string DuplicateCustomerXML) {
            this.SSODeleteDuplicateCustomerAsync(vendorUsername, vendorPassword, DuplicateCustomerXML, null);
        }
        
        /// <remarks/>
        public void SSODeleteDuplicateCustomerAsync(string vendorUsername, string vendorPassword, string DuplicateCustomerXML, object userState) {
            if ((this.SSODeleteDuplicateCustomerOperationCompleted == null)) {
                this.SSODeleteDuplicateCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSODeleteDuplicateCustomerOperationCompleted);
            }
            this.InvokeAsync("SSODeleteDuplicateCustomer", new object[] {
                        vendorUsername,
                        vendorPassword,
                        DuplicateCustomerXML}, this.SSODeleteDuplicateCustomerOperationCompleted, userState);
        }
        
        private void OnSSODeleteDuplicateCustomerOperationCompleted(object arg) {
            if ((this.SSODeleteDuplicateCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSODeleteDuplicateCustomerCompleted(this, new SSODeleteDuplicateCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://TIMSSSSO/webservice/SSOCustomerDoesVendorCustomerExist", RequestNamespace="http://TIMSSSSO/webservice", ResponseNamespace="http://TIMSSSSO/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SSOVendorCustomerResult SSOCustomerDoesVendorCustomerExist(string vendorUsername, string vendorPassword, string username) {
            object[] results = this.Invoke("SSOCustomerDoesVendorCustomerExist", new object[] {
                        vendorUsername,
                        vendorPassword,
                        username});
            return ((SSOVendorCustomerResult)(results[0]));
        }
        
        /// <remarks/>
        public void SSOCustomerDoesVendorCustomerExistAsync(string vendorUsername, string vendorPassword, string username) {
            this.SSOCustomerDoesVendorCustomerExistAsync(vendorUsername, vendorPassword, username, null);
        }
        
        /// <remarks/>
        public void SSOCustomerDoesVendorCustomerExistAsync(string vendorUsername, string vendorPassword, string username, object userState) {
            if ((this.SSOCustomerDoesVendorCustomerExistOperationCompleted == null)) {
                this.SSOCustomerDoesVendorCustomerExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSOCustomerDoesVendorCustomerExistOperationCompleted);
            }
            this.InvokeAsync("SSOCustomerDoesVendorCustomerExist", new object[] {
                        vendorUsername,
                        vendorPassword,
                        username}, this.SSOCustomerDoesVendorCustomerExistOperationCompleted, userState);
        }
        
        private void OnSSOCustomerDoesVendorCustomerExistOperationCompleted(object arg) {
            if ((this.SSOCustomerDoesVendorCustomerExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSOCustomerDoesVendorCustomerExistCompleted(this, new SSOCustomerDoesVendorCustomerExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://TIMSSSSO/webservice/CustomerAuthenticateAndGetId", RequestNamespace="http://TIMSSSSO/webservice", ResponseNamespace="http://TIMSSSSO/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomerAuthenticateAndGetCustomerIdResult CustomerAuthenticateAndGetId(string vendorUsername, string vendorPassword, string customerUserName, string customerPassword) {
            object[] results = this.Invoke("CustomerAuthenticateAndGetId", new object[] {
                        vendorUsername,
                        vendorPassword,
                        customerUserName,
                        customerPassword});
            return ((CustomerAuthenticateAndGetCustomerIdResult)(results[0]));
        }
        
        /// <remarks/>
        public void CustomerAuthenticateAndGetIdAsync(string vendorUsername, string vendorPassword, string customerUserName, string customerPassword) {
            this.CustomerAuthenticateAndGetIdAsync(vendorUsername, vendorPassword, customerUserName, customerPassword, null);
        }
        
        /// <remarks/>
        public void CustomerAuthenticateAndGetIdAsync(string vendorUsername, string vendorPassword, string customerUserName, string customerPassword, object userState) {
            if ((this.CustomerAuthenticateAndGetIdOperationCompleted == null)) {
                this.CustomerAuthenticateAndGetIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerAuthenticateAndGetIdOperationCompleted);
            }
            this.InvokeAsync("CustomerAuthenticateAndGetId", new object[] {
                        vendorUsername,
                        vendorPassword,
                        customerUserName,
                        customerPassword}, this.CustomerAuthenticateAndGetIdOperationCompleted, userState);
        }
        
        private void OnCustomerAuthenticateAndGetIdOperationCompleted(object arg) {
            if ((this.CustomerAuthenticateAndGetIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerAuthenticateAndGetIdCompleted(this, new CustomerAuthenticateAndGetIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://TIMSSSSO/webservice/CustomerAuthenticateAndGetVendorCustomerId", RequestNamespace="http://TIMSSSSO/webservice", ResponseNamespace="http://TIMSSSSO/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomerAuthenticateAndGetCustomerIdResult CustomerAuthenticateAndGetVendorCustomerId(string vendorUsername, string vendorPassword, string customerUserName, string customerPassword) {
            object[] results = this.Invoke("CustomerAuthenticateAndGetVendorCustomerId", new object[] {
                        vendorUsername,
                        vendorPassword,
                        customerUserName,
                        customerPassword});
            return ((CustomerAuthenticateAndGetCustomerIdResult)(results[0]));
        }
        
        /// <remarks/>
        public void CustomerAuthenticateAndGetVendorCustomerIdAsync(string vendorUsername, string vendorPassword, string customerUserName, string customerPassword) {
            this.CustomerAuthenticateAndGetVendorCustomerIdAsync(vendorUsername, vendorPassword, customerUserName, customerPassword, null);
        }
        
        /// <remarks/>
        public void CustomerAuthenticateAndGetVendorCustomerIdAsync(string vendorUsername, string vendorPassword, string customerUserName, string customerPassword, object userState) {
            if ((this.CustomerAuthenticateAndGetVendorCustomerIdOperationCompleted == null)) {
                this.CustomerAuthenticateAndGetVendorCustomerIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerAuthenticateAndGetVendorCustomerIdOperationCompleted);
            }
            this.InvokeAsync("CustomerAuthenticateAndGetVendorCustomerId", new object[] {
                        vendorUsername,
                        vendorPassword,
                        customerUserName,
                        customerPassword}, this.CustomerAuthenticateAndGetVendorCustomerIdOperationCompleted, userState);
        }
        
        private void OnCustomerAuthenticateAndGetVendorCustomerIdOperationCompleted(object arg) {
            if ((this.CustomerAuthenticateAndGetVendorCustomerIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerAuthenticateAndGetVendorCustomerIdCompleted(this, new CustomerAuthenticateAndGetVendorCustomerIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://TIMSSSSO/webservice/SSOCustomerUpdateEmailByTimssID", RequestNamespace="http://TIMSSSSO/webservice", ResponseNamespace="http://TIMSSSSO/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SSOCustomerUpdateResult SSOCustomerUpdateEmailByTimssID(string vendorUsername, string vendorPassword, string oldEmailAddress, string newEmailAddress, string TimssCustomerId) {
            object[] results = this.Invoke("SSOCustomerUpdateEmailByTimssID", new object[] {
                        vendorUsername,
                        vendorPassword,
                        oldEmailAddress,
                        newEmailAddress,
                        TimssCustomerId});
            return ((SSOCustomerUpdateResult)(results[0]));
        }
        
        /// <remarks/>
        public void SSOCustomerUpdateEmailByTimssIDAsync(string vendorUsername, string vendorPassword, string oldEmailAddress, string newEmailAddress, string TimssCustomerId) {
            this.SSOCustomerUpdateEmailByTimssIDAsync(vendorUsername, vendorPassword, oldEmailAddress, newEmailAddress, TimssCustomerId, null);
        }
        
        /// <remarks/>
        public void SSOCustomerUpdateEmailByTimssIDAsync(string vendorUsername, string vendorPassword, string oldEmailAddress, string newEmailAddress, string TimssCustomerId, object userState) {
            if ((this.SSOCustomerUpdateEmailByTimssIDOperationCompleted == null)) {
                this.SSOCustomerUpdateEmailByTimssIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSOCustomerUpdateEmailByTimssIDOperationCompleted);
            }
            this.InvokeAsync("SSOCustomerUpdateEmailByTimssID", new object[] {
                        vendorUsername,
                        vendorPassword,
                        oldEmailAddress,
                        newEmailAddress,
                        TimssCustomerId}, this.SSOCustomerUpdateEmailByTimssIDOperationCompleted, userState);
        }
        
        private void OnSSOCustomerUpdateEmailByTimssIDOperationCompleted(object arg) {
            if ((this.SSOCustomerUpdateEmailByTimssIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSOCustomerUpdateEmailByTimssIDCompleted(this, new SSOCustomerUpdateEmailByTimssIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://TIMSSSSO/webservice/SSOCustomerUpdateEmailByUserName", RequestNamespace="http://TIMSSSSO/webservice", ResponseNamespace="http://TIMSSSSO/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SSOCustomerUpdateResult SSOCustomerUpdateEmailByUserName(string vendorUsername, string vendorPassword, string newEmailAddress, string UserName) {
            object[] results = this.Invoke("SSOCustomerUpdateEmailByUserName", new object[] {
                        vendorUsername,
                        vendorPassword,
                        newEmailAddress,
                        UserName});
            return ((SSOCustomerUpdateResult)(results[0]));
        }
        
        /// <remarks/>
        public void SSOCustomerUpdateEmailByUserNameAsync(string vendorUsername, string vendorPassword, string newEmailAddress, string UserName) {
            this.SSOCustomerUpdateEmailByUserNameAsync(vendorUsername, vendorPassword, newEmailAddress, UserName, null);
        }
        
        /// <remarks/>
        public void SSOCustomerUpdateEmailByUserNameAsync(string vendorUsername, string vendorPassword, string newEmailAddress, string UserName, object userState) {
            if ((this.SSOCustomerUpdateEmailByUserNameOperationCompleted == null)) {
                this.SSOCustomerUpdateEmailByUserNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSOCustomerUpdateEmailByUserNameOperationCompleted);
            }
            this.InvokeAsync("SSOCustomerUpdateEmailByUserName", new object[] {
                        vendorUsername,
                        vendorPassword,
                        newEmailAddress,
                        UserName}, this.SSOCustomerUpdateEmailByUserNameOperationCompleted, userState);
        }
        
        private void OnSSOCustomerUpdateEmailByUserNameOperationCompleted(object arg) {
            if ((this.SSOCustomerUpdateEmailByUserNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSOCustomerUpdateEmailByUserNameCompleted(this, new SSOCustomerUpdateEmailByUserNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://TIMSSSSO/webservice/SSOCustomerUpdateUserNameByTimssID", RequestNamespace="http://TIMSSSSO/webservice", ResponseNamespace="http://TIMSSSSO/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SSOCustomerUpdateResult SSOCustomerUpdateUserNameByTimssID(string vendorUsername, string vendorPassword, string newUserName, string TimssCustomerId) {
            object[] results = this.Invoke("SSOCustomerUpdateUserNameByTimssID", new object[] {
                        vendorUsername,
                        vendorPassword,
                        newUserName,
                        TimssCustomerId});
            return ((SSOCustomerUpdateResult)(results[0]));
        }
        
        /// <remarks/>
        public void SSOCustomerUpdateUserNameByTimssIDAsync(string vendorUsername, string vendorPassword, string newUserName, string TimssCustomerId) {
            this.SSOCustomerUpdateUserNameByTimssIDAsync(vendorUsername, vendorPassword, newUserName, TimssCustomerId, null);
        }
        
        /// <remarks/>
        public void SSOCustomerUpdateUserNameByTimssIDAsync(string vendorUsername, string vendorPassword, string newUserName, string TimssCustomerId, object userState) {
            if ((this.SSOCustomerUpdateUserNameByTimssIDOperationCompleted == null)) {
                this.SSOCustomerUpdateUserNameByTimssIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSOCustomerUpdateUserNameByTimssIDOperationCompleted);
            }
            this.InvokeAsync("SSOCustomerUpdateUserNameByTimssID", new object[] {
                        vendorUsername,
                        vendorPassword,
                        newUserName,
                        TimssCustomerId}, this.SSOCustomerUpdateUserNameByTimssIDOperationCompleted, userState);
        }
        
        private void OnSSOCustomerUpdateUserNameByTimssIDOperationCompleted(object arg) {
            if ((this.SSOCustomerUpdateUserNameByTimssIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSOCustomerUpdateUserNameByTimssIDCompleted(this, new SSOCustomerUpdateUserNameByTimssIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://TIMSSSSO/webservice/SSOCustomerUpdatePasswordByTimssID", RequestNamespace="http://TIMSSSSO/webservice", ResponseNamespace="http://TIMSSSSO/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SSOCustomerUpdateResult SSOCustomerUpdatePasswordByTimssID(string vendorUsername, string vendorPassword, string TimssCustomerId, string newPassword) {
            object[] results = this.Invoke("SSOCustomerUpdatePasswordByTimssID", new object[] {
                        vendorUsername,
                        vendorPassword,
                        TimssCustomerId,
                        newPassword});
            return ((SSOCustomerUpdateResult)(results[0]));
        }
        
        /// <remarks/>
        public void SSOCustomerUpdatePasswordByTimssIDAsync(string vendorUsername, string vendorPassword, string TimssCustomerId, string newPassword) {
            this.SSOCustomerUpdatePasswordByTimssIDAsync(vendorUsername, vendorPassword, TimssCustomerId, newPassword, null);
        }
        
        /// <remarks/>
        public void SSOCustomerUpdatePasswordByTimssIDAsync(string vendorUsername, string vendorPassword, string TimssCustomerId, string newPassword, object userState) {
            if ((this.SSOCustomerUpdatePasswordByTimssIDOperationCompleted == null)) {
                this.SSOCustomerUpdatePasswordByTimssIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSOCustomerUpdatePasswordByTimssIDOperationCompleted);
            }
            this.InvokeAsync("SSOCustomerUpdatePasswordByTimssID", new object[] {
                        vendorUsername,
                        vendorPassword,
                        TimssCustomerId,
                        newPassword}, this.SSOCustomerUpdatePasswordByTimssIDOperationCompleted, userState);
        }
        
        private void OnSSOCustomerUpdatePasswordByTimssIDOperationCompleted(object arg) {
            if ((this.SSOCustomerUpdatePasswordByTimssIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSOCustomerUpdatePasswordByTimssIDCompleted(this, new SSOCustomerUpdatePasswordByTimssIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://TIMSSSSO/webservice/SSOCustomerUpdatePasswordByUserName", RequestNamespace="http://TIMSSSSO/webservice", ResponseNamespace="http://TIMSSSSO/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SSOCustomerUpdateResult SSOCustomerUpdatePasswordByUserName(string vendorUsername, string vendorPassword, string UserName, string newPassword) {
            object[] results = this.Invoke("SSOCustomerUpdatePasswordByUserName", new object[] {
                        vendorUsername,
                        vendorPassword,
                        UserName,
                        newPassword});
            return ((SSOCustomerUpdateResult)(results[0]));
        }
        
        /// <remarks/>
        public void SSOCustomerUpdatePasswordByUserNameAsync(string vendorUsername, string vendorPassword, string UserName, string newPassword) {
            this.SSOCustomerUpdatePasswordByUserNameAsync(vendorUsername, vendorPassword, UserName, newPassword, null);
        }
        
        /// <remarks/>
        public void SSOCustomerUpdatePasswordByUserNameAsync(string vendorUsername, string vendorPassword, string UserName, string newPassword, object userState) {
            if ((this.SSOCustomerUpdatePasswordByUserNameOperationCompleted == null)) {
                this.SSOCustomerUpdatePasswordByUserNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSOCustomerUpdatePasswordByUserNameOperationCompleted);
            }
            this.InvokeAsync("SSOCustomerUpdatePasswordByUserName", new object[] {
                        vendorUsername,
                        vendorPassword,
                        UserName,
                        newPassword}, this.SSOCustomerUpdatePasswordByUserNameOperationCompleted, userState);
        }
        
        private void OnSSOCustomerUpdatePasswordByUserNameOperationCompleted(object arg) {
            if ((this.SSOCustomerUpdatePasswordByUserNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSOCustomerUpdatePasswordByUserNameCompleted(this, new SSOCustomerUpdatePasswordByUserNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://TIMSSSSO/webservice/SSOSendPasswordReset", RequestNamespace="http://TIMSSSSO/webservice", ResponseNamespace="http://TIMSSSSO/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SSOSendPasswordReset(string vendorUsername, string vendorPassword, string emailAddress, string vendorIdentifier, string vendorToken) {
            object[] results = this.Invoke("SSOSendPasswordReset", new object[] {
                        vendorUsername,
                        vendorPassword,
                        emailAddress,
                        vendorIdentifier,
                        vendorToken});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SSOSendPasswordResetAsync(string vendorUsername, string vendorPassword, string emailAddress, string vendorIdentifier, string vendorToken) {
            this.SSOSendPasswordResetAsync(vendorUsername, vendorPassword, emailAddress, vendorIdentifier, vendorToken, null);
        }
        
        /// <remarks/>
        public void SSOSendPasswordResetAsync(string vendorUsername, string vendorPassword, string emailAddress, string vendorIdentifier, string vendorToken, object userState) {
            if ((this.SSOSendPasswordResetOperationCompleted == null)) {
                this.SSOSendPasswordResetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSOSendPasswordResetOperationCompleted);
            }
            this.InvokeAsync("SSOSendPasswordReset", new object[] {
                        vendorUsername,
                        vendorPassword,
                        emailAddress,
                        vendorIdentifier,
                        vendorToken}, this.SSOSendPasswordResetOperationCompleted, userState);
        }
        
        private void OnSSOSendPasswordResetOperationCompleted(object arg) {
            if ((this.SSOSendPasswordResetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSOSendPasswordResetCompleted(this, new SSOSendPasswordResetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://TIMSSSSO/webservice/SSOSendPasswordResetByUserName", RequestNamespace="http://TIMSSSSO/webservice", ResponseNamespace="http://TIMSSSSO/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SSOSendPasswordResetByUserName(string vendorUsername, string vendorPassword, string UserName, string emailAddress, string vendorIdentifier, string vendorToken) {
            object[] results = this.Invoke("SSOSendPasswordResetByUserName", new object[] {
                        vendorUsername,
                        vendorPassword,
                        UserName,
                        emailAddress,
                        vendorIdentifier,
                        vendorToken});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SSOSendPasswordResetByUserNameAsync(string vendorUsername, string vendorPassword, string UserName, string emailAddress, string vendorIdentifier, string vendorToken) {
            this.SSOSendPasswordResetByUserNameAsync(vendorUsername, vendorPassword, UserName, emailAddress, vendorIdentifier, vendorToken, null);
        }
        
        /// <remarks/>
        public void SSOSendPasswordResetByUserNameAsync(string vendorUsername, string vendorPassword, string UserName, string emailAddress, string vendorIdentifier, string vendorToken, object userState) {
            if ((this.SSOSendPasswordResetByUserNameOperationCompleted == null)) {
                this.SSOSendPasswordResetByUserNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSOSendPasswordResetByUserNameOperationCompleted);
            }
            this.InvokeAsync("SSOSendPasswordResetByUserName", new object[] {
                        vendorUsername,
                        vendorPassword,
                        UserName,
                        emailAddress,
                        vendorIdentifier,
                        vendorToken}, this.SSOSendPasswordResetByUserNameOperationCompleted, userState);
        }
        
        private void OnSSOSendPasswordResetByUserNameOperationCompleted(object arg) {
            if ((this.SSOSendPasswordResetByUserNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSOSendPasswordResetByUserNameCompleted(this, new SSOSendPasswordResetByUserNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://TIMSSSSO/webservice/SSOEnableDisableCustomerAccount", RequestNamespace="http://TIMSSSSO/webservice", ResponseNamespace="http://TIMSSSSO/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SSOCustomerUpdateResult SSOEnableDisableCustomerAccount(string vendorUsername, string vendorPassword, string UserName, bool DisableFlagValue) {
            object[] results = this.Invoke("SSOEnableDisableCustomerAccount", new object[] {
                        vendorUsername,
                        vendorPassword,
                        UserName,
                        DisableFlagValue});
            return ((SSOCustomerUpdateResult)(results[0]));
        }
        
        /// <remarks/>
        public void SSOEnableDisableCustomerAccountAsync(string vendorUsername, string vendorPassword, string UserName, bool DisableFlagValue) {
            this.SSOEnableDisableCustomerAccountAsync(vendorUsername, vendorPassword, UserName, DisableFlagValue, null);
        }
        
        /// <remarks/>
        public void SSOEnableDisableCustomerAccountAsync(string vendorUsername, string vendorPassword, string UserName, bool DisableFlagValue, object userState) {
            if ((this.SSOEnableDisableCustomerAccountOperationCompleted == null)) {
                this.SSOEnableDisableCustomerAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSOEnableDisableCustomerAccountOperationCompleted);
            }
            this.InvokeAsync("SSOEnableDisableCustomerAccount", new object[] {
                        vendorUsername,
                        vendorPassword,
                        UserName,
                        DisableFlagValue}, this.SSOEnableDisableCustomerAccountOperationCompleted, userState);
        }
        
        private void OnSSOEnableDisableCustomerAccountOperationCompleted(object arg) {
            if ((this.SSOEnableDisableCustomerAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSOEnableDisableCustomerAccountCompleted(this, new SSOEnableDisableCustomerAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://TIMSSSSO/webservice/SSOCustomerPasswordIsStrong", RequestNamespace="http://TIMSSSSO/webservice", ResponseNamespace="http://TIMSSSSO/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SSOCustomerPasswordIsStrong(string vendorUsername, string vendorPassword, string Password) {
            object[] results = this.Invoke("SSOCustomerPasswordIsStrong", new object[] {
                        vendorUsername,
                        vendorPassword,
                        Password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SSOCustomerPasswordIsStrongAsync(string vendorUsername, string vendorPassword, string Password) {
            this.SSOCustomerPasswordIsStrongAsync(vendorUsername, vendorPassword, Password, null);
        }
        
        /// <remarks/>
        public void SSOCustomerPasswordIsStrongAsync(string vendorUsername, string vendorPassword, string Password, object userState) {
            if ((this.SSOCustomerPasswordIsStrongOperationCompleted == null)) {
                this.SSOCustomerPasswordIsStrongOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSOCustomerPasswordIsStrongOperationCompleted);
            }
            this.InvokeAsync("SSOCustomerPasswordIsStrong", new object[] {
                        vendorUsername,
                        vendorPassword,
                        Password}, this.SSOCustomerPasswordIsStrongOperationCompleted, userState);
        }
        
        private void OnSSOCustomerPasswordIsStrongOperationCompleted(object arg) {
            if ((this.SSOCustomerPasswordIsStrongCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSOCustomerPasswordIsStrongCompleted(this, new SSOCustomerPasswordIsStrongCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class SSOCustomerTokenIsValidResult {
        
        private string[] errorsField;
        
        private bool validField;
        
        private string newCustomerTokenField;
        
        /// <remarks/>
        public string[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public string NewCustomerToken {
            get {
                return this.newCustomerTokenField;
            }
            set {
                this.newCustomerTokenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class CustomerAuthenticateAndGetCustomerIdResult {
        
        private string[] errorsField;
        
        private bool resultField;
        
        private string customerIdField;
        
        /// <remarks/>
        public string[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        public bool Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerId {
            get {
                return this.customerIdField;
            }
            set {
                this.customerIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class SSOVendorCustomerResult {
        
        private bool vendorCustomerAlreadyExistField;
        
        private string usernameField;
        
        private string emailField;
        
        private string vendorCustomerIdField;
        
        private string vendorUserNameField;
        
        private string customerIdField;
        
        private string[] errorsField;
        
        /// <remarks/>
        public bool VendorCustomerAlreadyExist {
            get {
                return this.vendorCustomerAlreadyExistField;
            }
            set {
                this.vendorCustomerAlreadyExistField = value;
            }
        }
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string VendorCustomerId {
            get {
                return this.vendorCustomerIdField;
            }
            set {
                this.vendorCustomerIdField = value;
            }
        }
        
        /// <remarks/>
        public string VendorUserName {
            get {
                return this.vendorUserNameField;
            }
            set {
                this.vendorUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerId {
            get {
                return this.customerIdField;
            }
            set {
                this.customerIdField = value;
            }
        }
        
        /// <remarks/>
        public string[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class SSODeleteDuplicateCustomerResult {
        
        private string[] errorsField;
        
        private bool resultField;
        
        /// <remarks/>
        public string[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        public bool Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class SSOCustomerAuthenticateResult {
        
        private string[] errorsField;
        
        private bool resultField;
        
        /// <remarks/>
        public string[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        public bool Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class SSOCustomerUpdateResult {
        
        private string[] errorsField;
        
        private bool resultField;
        
        /// <remarks/>
        public string[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        public bool Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class SSOCustomerRegisterResult {
        
        private string[] errorsField;
        
        private bool resultField;
        
        private string newCustomerTokenField;
        
        /// <remarks/>
        public string[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        public bool Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public string NewCustomerToken {
            get {
                return this.newCustomerTokenField;
            }
            set {
                this.newCustomerTokenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class SSOCustomerGetResult {
        
        private bool userExistsField;
        
        private string userNameField;
        
        private string emailField;
        
        private bool disableAccountFlagField;
        
        private string[] errorsField;
        
        /// <remarks/>
        public bool UserExists {
            get {
                return this.userExistsField;
            }
            set {
                this.userExistsField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public bool DisableAccountFlag {
            get {
                return this.disableAccountFlagField;
            }
            set {
                this.disableAccountFlagField = value;
            }
        }
        
        /// <remarks/>
        public string[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class AuthorizeAccessResult {
        
        private string[] errorsField;
        
        private bool resultField;
        
        /// <remarks/>
        public string[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        public bool Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class CustomerTokenDecryptResult {
        
        private string[] errorsField;
        
        private string customerTokenField;
        
        /// <remarks/>
        public string[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerToken {
            get {
                return this.customerTokenField;
            }
            set {
                this.customerTokenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class VendorTokenEncryptResult {
        
        private string[] errorsField;
        
        private string vendorTokenField;
        
        /// <remarks/>
        public string[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        public string VendorToken {
            get {
                return this.vendorTokenField;
            }
            set {
                this.vendorTokenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class SSOCustomerLogoutResult {
        
        private string[] errorsField;
        
        /// <remarks/>
        public string[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class VendorSSOCustomerIdentifierGetResult {
        
        private string[] errorsField;
        
        private string customerIdentifierField;
        
        /// <remarks/>
        public string[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerIdentifier {
            get {
                return this.customerIdentifierField;
            }
            set {
                this.customerIdentifierField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class VendorSSOCustomerIdentifierSetResult {
        
        private string[] errorsField;
        
        private string customerIdentifierField;
        
        /// <remarks/>
        public string[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerIdentifier {
            get {
                return this.customerIdentifierField;
            }
            set {
                this.customerIdentifierField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TIMSSSSO/webservice")]
    public partial class TIMSSCustomerIdentifierGetResult {
        
        private string[] errorsField;
        
        private string customerIdentifierField;
        
        /// <remarks/>
        public string[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerIdentifier {
            get {
                return this.customerIdentifierField;
            }
            set {
                this.customerIdentifierField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SSOCustomerTokenIsValidCompletedEventHandler(object sender, SSOCustomerTokenIsValidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSOCustomerTokenIsValidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSOCustomerTokenIsValidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SSOCustomerTokenIsValidResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SSOCustomerTokenIsValidResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void TIMSSCustomerIdentifierGetCompletedEventHandler(object sender, TIMSSCustomerIdentifierGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TIMSSCustomerIdentifierGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TIMSSCustomerIdentifierGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TIMSSCustomerIdentifierGetResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TIMSSCustomerIdentifierGetResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void TIMSSCustomerIdentifierSetCompletedEventHandler(object sender, TIMSSCustomerIdentifierSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TIMSSCustomerIdentifierSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TIMSSCustomerIdentifierSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VendorSSOCustomerIdentifierSetResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VendorSSOCustomerIdentifierSetResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void VendorSSOCustomerIdentifierGetCompletedEventHandler(object sender, VendorSSOCustomerIdentifierGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VendorSSOCustomerIdentifierGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VendorSSOCustomerIdentifierGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VendorSSOCustomerIdentifierGetResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VendorSSOCustomerIdentifierGetResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void VendorSSOCustomerIdentifierSetCompletedEventHandler(object sender, VendorSSOCustomerIdentifierSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VendorSSOCustomerIdentifierSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VendorSSOCustomerIdentifierSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VendorSSOCustomerIdentifierSetResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VendorSSOCustomerIdentifierSetResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SSOCustomerLogoutCompletedEventHandler(object sender, SSOCustomerLogoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSOCustomerLogoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSOCustomerLogoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SSOCustomerLogoutResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SSOCustomerLogoutResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void VendorTokenEncryptCompletedEventHandler(object sender, VendorTokenEncryptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VendorTokenEncryptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VendorTokenEncryptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VendorTokenEncryptResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VendorTokenEncryptResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CustomerTokenDecryptCompletedEventHandler(object sender, CustomerTokenDecryptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerTokenDecryptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerTokenDecryptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerTokenDecryptResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerTokenDecryptResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AuthorizeAccessCompletedEventHandler(object sender, AuthorizeAccessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthorizeAccessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthorizeAccessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AuthorizeAccessResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuthorizeAccessResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SSOCustomerGetCompletedEventHandler(object sender, SSOCustomerGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSOCustomerGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSOCustomerGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SSOCustomerGetResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SSOCustomerGetResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SSOCustomerGetByEmailCompletedEventHandler(object sender, SSOCustomerGetByEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSOCustomerGetByEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSOCustomerGetByEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SSOCustomerGetResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SSOCustomerGetResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SSOCustomerGetByUsernameCompletedEventHandler(object sender, SSOCustomerGetByUsernameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSOCustomerGetByUsernameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSOCustomerGetByUsernameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SSOCustomerGetResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SSOCustomerGetResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SSOCustomerGetByCustomerTokenCompletedEventHandler(object sender, SSOCustomerGetByCustomerTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSOCustomerGetByCustomerTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSOCustomerGetByCustomerTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SSOCustomerGetResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SSOCustomerGetResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SSOCustomerRegisterWithRandomPasswordCompletedEventHandler(object sender, SSOCustomerRegisterWithRandomPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSOCustomerRegisterWithRandomPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSOCustomerRegisterWithRandomPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SSOCustomerRegisterResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SSOCustomerRegisterResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SSOCustomerRegisterCompletedEventHandler(object sender, SSOCustomerRegisterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSOCustomerRegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSOCustomerRegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SSOCustomerRegisterResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SSOCustomerRegisterResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SSOCustomerRegister1CompletedEventHandler(object sender, SSOCustomerRegister1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSOCustomerRegister1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSOCustomerRegister1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SSOCustomerRegisterResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SSOCustomerRegisterResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SSOCustomerUpdateUserNameCompletedEventHandler(object sender, SSOCustomerUpdateUserNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSOCustomerUpdateUserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSOCustomerUpdateUserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SSOCustomerUpdateResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SSOCustomerUpdateResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SSOCustomerUpdateEmailCompletedEventHandler(object sender, SSOCustomerUpdateEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSOCustomerUpdateEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSOCustomerUpdateEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SSOCustomerUpdateResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SSOCustomerUpdateResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SSOCustomerUpdatePasswordCompletedEventHandler(object sender, SSOCustomerUpdatePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSOCustomerUpdatePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSOCustomerUpdatePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SSOCustomerUpdateResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SSOCustomerUpdateResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SSOCustomerAuthenticateCompletedEventHandler(object sender, SSOCustomerAuthenticateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSOCustomerAuthenticateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSOCustomerAuthenticateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SSOCustomerAuthenticateResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SSOCustomerAuthenticateResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SSODeleteDuplicateCustomerCompletedEventHandler(object sender, SSODeleteDuplicateCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSODeleteDuplicateCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSODeleteDuplicateCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SSODeleteDuplicateCustomerResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SSODeleteDuplicateCustomerResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SSOCustomerDoesVendorCustomerExistCompletedEventHandler(object sender, SSOCustomerDoesVendorCustomerExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSOCustomerDoesVendorCustomerExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSOCustomerDoesVendorCustomerExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SSOVendorCustomerResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SSOVendorCustomerResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CustomerAuthenticateAndGetIdCompletedEventHandler(object sender, CustomerAuthenticateAndGetIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerAuthenticateAndGetIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerAuthenticateAndGetIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerAuthenticateAndGetCustomerIdResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerAuthenticateAndGetCustomerIdResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CustomerAuthenticateAndGetVendorCustomerIdCompletedEventHandler(object sender, CustomerAuthenticateAndGetVendorCustomerIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerAuthenticateAndGetVendorCustomerIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerAuthenticateAndGetVendorCustomerIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerAuthenticateAndGetCustomerIdResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerAuthenticateAndGetCustomerIdResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SSOCustomerUpdateEmailByTimssIDCompletedEventHandler(object sender, SSOCustomerUpdateEmailByTimssIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSOCustomerUpdateEmailByTimssIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSOCustomerUpdateEmailByTimssIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SSOCustomerUpdateResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SSOCustomerUpdateResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SSOCustomerUpdateEmailByUserNameCompletedEventHandler(object sender, SSOCustomerUpdateEmailByUserNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSOCustomerUpdateEmailByUserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSOCustomerUpdateEmailByUserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SSOCustomerUpdateResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SSOCustomerUpdateResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SSOCustomerUpdateUserNameByTimssIDCompletedEventHandler(object sender, SSOCustomerUpdateUserNameByTimssIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSOCustomerUpdateUserNameByTimssIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSOCustomerUpdateUserNameByTimssIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SSOCustomerUpdateResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SSOCustomerUpdateResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SSOCustomerUpdatePasswordByTimssIDCompletedEventHandler(object sender, SSOCustomerUpdatePasswordByTimssIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSOCustomerUpdatePasswordByTimssIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSOCustomerUpdatePasswordByTimssIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SSOCustomerUpdateResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SSOCustomerUpdateResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SSOCustomerUpdatePasswordByUserNameCompletedEventHandler(object sender, SSOCustomerUpdatePasswordByUserNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSOCustomerUpdatePasswordByUserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSOCustomerUpdatePasswordByUserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SSOCustomerUpdateResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SSOCustomerUpdateResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SSOSendPasswordResetCompletedEventHandler(object sender, SSOSendPasswordResetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSOSendPasswordResetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSOSendPasswordResetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SSOSendPasswordResetByUserNameCompletedEventHandler(object sender, SSOSendPasswordResetByUserNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSOSendPasswordResetByUserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSOSendPasswordResetByUserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SSOEnableDisableCustomerAccountCompletedEventHandler(object sender, SSOEnableDisableCustomerAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSOEnableDisableCustomerAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSOEnableDisableCustomerAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SSOCustomerUpdateResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SSOCustomerUpdateResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SSOCustomerPasswordIsStrongCompletedEventHandler(object sender, SSOCustomerPasswordIsStrongCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSOCustomerPasswordIsStrongCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSOCustomerPasswordIsStrongCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591